name: Laravel

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

env:
  REDIS_HOST: 127.0.0.1
  DB_HOST: 127.0.0.1

jobs:

  build:

    name: Build the application
    
    services: 
      redis:
        image: redis
        ports: 
          - 6379:6379

    runs-on: ubuntu-20.04	
    
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP with pecl extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: pecl
          extensions: imagick
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install composer dependencies
        run: composer install --no-ansi --prefer-dist --no-progress --no-interaction --no-dev --optimize-autoloader
      - name: Create artifact
        run: tar --exclude=build --exclude=./.git --exclude=.env.example --exclude=.env.testing --exclude=storage/app/public/uploads -czf build/deployment.tar.gz *
      - uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build/deployment.tar.gz
          
  test:
    
    name: Test the application
    
    services: 
      redis:
        image: redis
        ports: 
          - 6379:6379
      mysql:
        image: mysql:5.7
        ports: 
          - 3306:3306
        env:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_PASSWORD: testing
    
    runs-on: ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP with pecl extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: pecl
          extensions: imagick
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dev modules
        run: composer install --no-ansi --prefer-dist --no-progress --no-interaction --dev --optimize-autoloader
      - name: Check code style
        run: vendor/bin/phpcs -d memory_limit=1G --standard=PSR12 --ignore=\*blade.php,\*.js,\*/vendor/\*,\*/storage/framework/\*,\*/bootstrap/cache/\*,\*/database/\* --extensions=php .
        continue-on-error: true
      - name: Populate .env
        run: |
          php artisan key:generate --env=testing
          php artisan jwt:secret --env=testing
      - name: Unit tests
        run: vendor/bin/phpunit
        
  create-docker-image:

    name: Create docker image
    
    needs: [ build, test ]

    runs-on: ubuntu-20.04

    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: build
      - name: Build docker image
        run: docker build -t wiringa/webshopi:$GITHUB_SHA ./build
      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: wiringawtg/webshop-api
          tag_with_ref: true
