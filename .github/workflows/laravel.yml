name: Laravel

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

env:
  # Google Cloud variables
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  GCE_INSTANCE: webshop-api-0
  GCE_INSTANCE_REGION: europe-west4
  GCE_INSTANCE_ZONE: europe-west4-a
  GCE_INSTANCE_TYPE: e2-micro

  # Laravel variables
  CACHE_DRIVER: array
  SESSION_DRIVER: array
  DB_HOST: "127.0.0.1"

jobs:

  # Build the application
  build:

    name: Build the application

    if: github.event_name == 'push'

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP with pecl extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: pecl
          extensions: imagick

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-ansi --prefer-dist --no-progress --no-interaction --no-dev --optimize-autoloader

      - name: Symlink storage dir
        run: ln -s ../storage/app/public public/storage

      - name: Create artifact
        run: tar --exclude=build --exclude=./.git --exclude=.env.example --exclude=.env.testing --exclude=storage/app/public/uploads -czf build/deployment.tar.gz *

      - uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build/deployment.tar.gz

      - name: Build docker image
        run: docker build -t gcr.io/$PROJECT_ID/webshop-api:build-$GITHUB_RUN_NUMBER ./build

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCE_SA_KEY }}
          project_id: ${{ secrets.GCE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - name: Configure docker to use gcloud
        run: gcloud --quiet auth configure-docker

      - name: Push tags to Docker Hub
        if: github.event_name == 'push'
        run: |
          docker push gcr.io/$PROJECT_ID/webshop-api:build-$GITHUB_RUN_NUMBER


  # Run application tests
  test:

    name: Test the application

    runs-on: ubuntu-20.04

    services:
      mysql:
        image: mysql:5.7
        ports: 
          - 3306:3306
        env:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_PASSWORD: testing

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP with pecl extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: pecl
          extensions: imagick

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dev modules
        run: composer install --no-ansi --prefer-dist --no-progress --no-interaction --dev --optimize-autoloader

      - name: Check code style
        run: vendor/bin/phpcs -d memory_limit=1G --standard=PSR12 --ignore=\*blade.php,\*.js,\*/vendor/\*,\*/storage/framework/\*,\*/bootstrap/cache/\*,\*/database/\* --extensions=php .
        continue-on-error: true

      - name: Populate .env
        run: |
          php artisan key:generate --env=testing
          php artisan jwt:secret --env=testing

      - name: Unit tests
        run: vendor/bin/phpunit

  # Job to create docker image
  deploy:

    needs: [ build ]

    name: Deploy the docker image

    runs-on: ubuntu-20.04

    if: github.event_name == 'push'

    steps:
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GCE_SA_KEY }}
          project_id: ${{ secrets.GCE_PROJECT }}

      - name: Create new instance template
        run: |-
          gcloud compute instance-templates create-with-container "api-template-$GITHUB_RUN_NUMBER" \
            --container-image "gcr.io/$PROJECT_ID/webshop-api:build-$GITHUB_RUN_NUMBER" \
            --container-restart-policy on-failure \
            --tags "webshop-api,http-server" \
            --machine-type $GCE_INSTANCE_TYPE \
            --region $GCE_INSTANCE_REGION \
            --boot-disk-auto-delete \
            --metadata "google-logging-enabled=true"

      - name: Deploy
        run: |-
          gcloud compute instance-groups managed rolling-action start-update api-group-1 \
            --version "template=api-template-$GITHUB_RUN_NUMBER" \
            --zone "$GCE_INSTANCE_ZONE"
