# Pre-built image with dependencies already installed
image: lunamoonfang/wtg-php:build-7.2

cache:
  paths:
    - vendor/

stages:
  - build
  - test
  - deploy

build_job:
  stage: build

  script:
    # Install Composer and project dependencies.
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install --no-progress

    # Install Node dependencies.
    - npm install -s

    # Copy over testing configuration.
    - cp .env.testing .env

    # Generate an application key. Re-cache.
    - php artisan key:generate
    - php artisan config:cache

    # Build the assets
    - npm run prod

    # Cleanup node modules
    - rm -rf node_modules

test_job:
  stage: test

  services:
    - mysql:latest

  variables:
    MYSQL_DATABASE: wiringa
    MYSQL_ROOT_PASSWORD: secret

  script:
    # Run laravel tests
    - php vendor/bin/phpunit --coverage-text --colors=never

deploy_staging_job:
  stage: deploy

  when: manual

  only:
    - release

  script:
    # Install ssh if not already installed
    - 'which ssh || ( apt-get update -y && apt-get install openssh-client -y )'

    # Create the SSH directory and give it the right permissions
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    # Known host checking
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts

    # Add keypair
    - echo "$SSH_PUBLIC_KEY" > ~/.ssh/id_rsa.pub
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa

    # Add SSH config
    - echo "$SSH_CONFIG" > ~/.ssh/config

    # Fix permissions
    - chmod 600 ~/.ssh/id_rsa*
    - chmod 600 ~/.ssh/config
    - chmod 644 ~/.ssh/known_hosts

    # Release to staging
    - ssh $SSH_HOSTNAME -c "cd docker/staging.wiringa.nl \
      && docker-compose pull \
      && docker-compose up -d \
      && docker-compose exec app artisan config:cache \
      && docker-compose exec app artisan view:clear \
      && docker-compose exec app artisan cache:clear \
      && docker-compose exec app artisan migrate"

deploy_production_job:
  stage: deploy

  when: manual

  only:
    - master

  script:
    # Release to production
    - vendor/bin/dep deploy production